{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","creatureAccessoryFactoryAddress","useState","setWeb3","currentAddress","setCurrentAddress","listLootBox","setListLootBox","creature","creatureFactory","creatureLootBox","creatureAccessory","lootBoxRandomness","creatureAccessoryLootBox","creatureAccessoryFactory","contract","setContract","refresh","setRefresh","setCreature","setCreatureFactory","setCreatureAccessory","setCreatureAccessoryLootBox","setCreatureAccessoryFactory","itemAccessoryIds","lootBoxAccessoryIds","connectWallet","a","window","ethereum","request","method","web3","Web3","eth","getAccounts","accounts","Contract","CreatureAbi","CreatureFactoryAbi","CreatureLootBoxAbi","CreatureAccessoryAbi","LootBoxRandomnessAbi","CreatureAccessoryLootBoxAbi","CreatureAccessoryFactoryAbi","useEffect","methods","totalSupply","call","tokenURI","i","Number","push","name","symbol","owner","baseTokenURI","contractURI","Promise","all","map","id","balanceOf","creators","balance","creator","items","console","log","isApprovedForAll","isApprovedForFactory","setInfo","then","mintTo","option","address","mint","send","from","receipt","loadListLootBox","tokenIDs","ownerOf","checkOwner","unpack","tokenID","mint1155To","amount","unpack1155LootBox","approveForFactory","setApprovalForAll","className","Container","fluid","style","maxWidth","Row","Col","Button","variant","onClick","disabled","e","index","Card","Body","Title","Text","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e291fd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport {\n  Row,\n  Col,\n  Button,\n  Container,\n  Card,\n  Form,\n  Tab,\n  Tabs,\n  Alert,\n} from \"react-bootstrap\";\nimport CreatureAbi from './abi/Creature.json';\nimport CreatureAccessoryAbi from './abi/CreatureAccessory.json';\nimport CreatureLootBoxAbi from './abi/CreatureLootBox.json';\nimport CreatureAccessoryFactoryAbi from './abi/CreatureAccessoryFactory.json';\nimport CreatureAccessoryLootBoxAbi from './abi/CreatureAccessoryLootBox.json';\nimport CreatureFactoryAbi from './abi/CreatureFactory.json';\nimport LootBoxRandomnessAbi from './abi/LootBoxRandomness.json';\n\nfunction App() {\n  // BSC\n  const creatureAddress = '0x7b66280a97D4C706E896C534aBEd8d7Bc3D15492';\n  const creatureFactoryAddress = '0x3235197a44c4C6B8747b3103e2B9B11719E869A5';\n  const creatureLootBoxAddress = '0xD9Ff70e4282AA3Fa0bFA57fBD3334d7e750FAfc2';\n  const creatureAccessoryAddress = '0x3B9dcf4D8Ef37ECe348EF80AD70f1c073aC4Ab60';\n  const lootBoxRandomnessAddress = '0x16ab070Ca481C1ebC180dB92c2Ae956BAA1bde6b';\n  const creatureAccessoryLootBoxAddress = '0x91324eA105eA26181d3Bb54AE12DC28616fa17e8';\n  const creatureAccessoryFactoryAddress = '0x122FE47593fe359D52AeBa9c5ACE05CBe2d84c67';\n\n  const [web3, setWeb3] = useState(null)\n  const [currentAddress, setCurrentAddress] = useState(null)\n  const [listLootBox, setListLootBox] = useState([])\n\n  const [contract, setContract] = useState({\n    creature: null,\n    creatureFactory: null,\n    creatureLootBox: null,\n    creatureAccessory: null,\n    lootBoxRandomness: null,\n    creatureAccessoryLootBox: null,\n    creatureAccessoryFactory: null,\n  })\n\n  const [refresh, setRefresh] = useState(null)\n\n  const [creature, setCreature] = useState({})\n  const [creatureFactory, setCreatureFactory] = useState({})\n  const [creatureAccessory, setCreatureAccessory] = useState({})\n  const [creatureAccessoryLootBox, setCreatureAccessoryLootBox] = useState({})\n  const [creatureAccessoryFactory, setCreatureAccessoryFactory] = useState({})\n\n  const itemAccessoryIds = [0,1,2,3,4,5];\n  const lootBoxAccessoryIds = [0,1,2];\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n\n      const ethereum = window.ethereum;\n      await ethereum.request({ method: \"eth_requestAccounts\" });\n      const web3 = new Web3(ethereum)\n      setWeb3(web3)\n      const accounts = await web3.eth.getAccounts();\n      setCurrentAddress(accounts[0]);\n      setContract({\n        creature: new web3.eth.Contract(CreatureAbi,creatureAddress),\n        creatureFactory: new web3.eth.Contract(CreatureFactoryAbi,creatureFactoryAddress),\n        creatureLootBox: new web3.eth.Contract(CreatureLootBoxAbi,creatureLootBoxAddress),\n        creatureAccessory: new web3.eth.Contract(CreatureAccessoryAbi,creatureAccessoryAddress),\n        lootBoxRandomness: new web3.eth.Contract(LootBoxRandomnessAbi,lootBoxRandomnessAddress),\n        creatureAccessoryLootBox: new web3.eth.Contract(CreatureAccessoryLootBoxAbi,creatureAccessoryLootBoxAddress),\n        creatureAccessoryFactory: new web3.eth.Contract(CreatureAccessoryFactoryAbi,creatureAccessoryFactoryAddress),\n      })\n    }\n  }\n\n  useEffect(() => {\n    async function setInfo() {\n      if(!currentAddress) connectWallet()\n\n      if(contract.creature) {\n        const totalSupply = await contract.creature.methods.totalSupply().call();\n        const tokenURI = [];\n        for(let i = 1; i <= Number(totalSupply); i++) {\n          tokenURI.push(await contract.creature.methods.tokenURI(i).call());\n        }\n        setCreature({\n          name: await contract.creature.methods.name().call(),\n          symbol: await contract.creature.methods.symbol().call(),\n          owner: await contract.creature.methods.owner().call(),\n          baseTokenURI: await contract.creature.methods.baseTokenURI().call(),\n          contractURI:await contract.creature.methods.contractURI().call(),\n          totalSupply: totalSupply,\n          tokenURI: tokenURI,\n        })\n      }\n      if(contract.creatureFactory) {\n        setCreatureFactory({\n          name: await contract.creatureFactory.methods.name().call(),\n          symbol: await contract.creatureFactory.methods.symbol().call(),\n          owner: await contract.creatureFactory.methods.owner().call(),\n        })\n      }\n      if(contract.creatureAccessory) {\n        const items = await Promise.all(itemAccessoryIds.map(async (id) => ({\n          id,\n          balance: await contract.creatureAccessory.methods.balanceOf(currentAddress, id).call(),\n          creator: await contract.creatureAccessory.methods.creators(id).call(),\n          totalSupply: await contract.creatureAccessory.methods.totalSupply(id).call(),\n        })))\n        console.log('items: ', items)\n\n        setCreatureAccessory({\n          name: await contract.creatureAccessory.methods.name().call(),\n          symbol: await contract.creatureAccessory.methods.symbol().call(),\n          owner: await contract.creatureAccessory.methods.owner().call(),\n          isApprovedForFactory: await contract.creatureAccessory.methods.isApprovedForAll(currentAddress, creatureAccessoryFactoryAddress).call(),\n          items\n        })\n      }\n      if(contract.creatureAccessoryLootBox) {\n\n        const items = await Promise.all(lootBoxAccessoryIds.map(async (id) => ({\n          id,\n          balance: await contract.creatureAccessoryLootBox.methods.balanceOf(currentAddress, id).call(),\n          creator: await contract.creatureAccessoryLootBox.methods.creators(id).call(),\n          totalSupply: await contract.creatureAccessoryLootBox.methods.totalSupply(id).call(),\n        })))\n        setCreatureAccessoryLootBox({\n          name: await contract.creatureAccessoryLootBox.methods.name().call(),\n          symbol: await contract.creatureAccessoryLootBox.methods.symbol().call(),\n          owner: await contract.creatureAccessoryLootBox.methods.owner().call(),\n          items\n        })\n      }\n      if(contract.creatureAccessoryFactory) {\n        setCreatureAccessoryFactory({\n          name: await contract.creatureAccessoryFactory.methods.name().call(),\n          symbol: await contract.creatureAccessoryFactory.methods.symbol().call(),\n          owner: await contract.creatureAccessoryFactory.methods.owner().call(),\n        })\n      }\n    }\n    setInfo().then(() => console.log('update success!'));\n  }, [contract, refresh])\n\n  const mintTo = async (option, address) => {\n    const receipt = await contract.creatureFactory.methods.mint(option,address).send({from: currentAddress});\n    console.log('mint receipt: ', receipt);\n  }\n\n  const loadListLootBox = async () => {\n    if(contract.creatureLootBox) {\n      const totalSupply = await contract.creatureLootBox.methods.totalSupply().call();\n      const tokenIDs = [];\n      for(let i = 1; i <= Number(totalSupply); i++) {\n        try {\n          let checkOwner = await contract.creatureLootBox.methods.ownerOf(i).call();\n          console.log(i, checkOwner);\n          if (checkOwner === currentAddress) {\n            tokenIDs.push(i)\n          }\n        } catch (e) {\n          console.log('error = ', e);\n        }\n      }\n      setListLootBox(tokenIDs);\n      console.log('loadListLootBox: ', tokenIDs);\n    }\n  }\n\n  const unpack = async (tokenID) => {\n    const receipt = await contract.creatureLootBox.methods.unpack(tokenID).send({from: currentAddress});\n    console.log('unpack receipt: ', receipt);\n  }\n\n  const mint1155To = async (option, address, amount = 3) => {\n    const receipt = await contract.creatureAccessoryFactory.methods.mint(option,address, amount, \"0x0\").send({from: currentAddress});\n    console.log('mint receipt: ', receipt);\n    setRefresh(1)\n  }\n\n  const unpack1155LootBox = async (id) => {\n    const receipt = await contract.creatureAccessoryLootBox.methods.unpack(id,currentAddress, 3).send({from: currentAddress});\n    console.log('unpack receipt: ', receipt);\n    setRefresh(2)\n  }\n\n\n  const approveForFactory = async () => {\n    const receipt = await contract.creatureAccessory.methods.setApprovalForAll(creatureAccessoryFactoryAddress, true).send({from: currentAddress});\n    console.log('receipt: ', receipt);\n    setRefresh(3)\n  }\n\n  return (\n    <div className=\"App\">\n      <Container fluid className=\"distanced\" style={{ maxWidth: \"1440px\" }}>\n        {currentAddress ? (\n            <h3>Current address: {currentAddress}</h3>\n        ) : (\n            <Row>\n              <Col>\n                <Button variant=\"warning\" onClick={() => connectWallet()}>\n                  Connect wallet\n                </Button>\n              </Col>\n            </Row>\n        )}\n        <Row>\n          <Col>\n            <h1 style={{\"color\":\"powderblue\"}}>Open Sea</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h2>Creature (ERC 721)</h2>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <h2>Creature Factory</h2>\n          </Col>\n        </Row>\n        <Row><Button onClick={() => mintTo(0, currentAddress)}>Mint single</Button></Row>\n        <Row><Button onClick={() => mintTo(1, currentAddress)}>Mint 5</Button></Row>\n        <Row><Button onClick={() => mintTo(2, currentAddress)}>Mint loot box</Button></Row>\n        <Row><Button onClick={() => loadListLootBox()}>Load loot box</Button></Row>\n        <p>List loot box: {listLootBox}</p>\n        <Row><Button onClick={() => unpack(listLootBox[0])}>Unpack loot box</Button></Row>\n        <Row>\n          <Col>\n            <h1>ERC 1155</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h2>Creature Accessory</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <p>Name: {creatureAccessory.name}</p>\n          </Col>\n          <Col>\n            <p>Symbol: {creatureAccessory.symbol}</p>\n          </Col>\n          <Col>\n            <p>Owner: {creatureAccessory.owner}</p>\n          </Col>\n          <Col>\n            <p>Is Approve for factory: {creatureAccessory.isApprovedForFactory}</p>\n          </Col>\n          <Col>\n            <Button onClick={()=> approveForFactory()} disabled={creatureAccessory.isApprovedForFactory}>Approve for factory</Button>\n          </Col>\n        </Row>\n        <Row>\n          {creatureAccessory.items && creatureAccessory.items.map((e, index) => (<Col key={'lootBoxAccessory' + index}><Card>\n            <Card.Body>\n              <Card.Title>Id: {e.id}</Card.Title>\n              <Card.Text>\n                Balance: {e.balance} - Creator: {e.creator} - Total Supply: {e.totalSupply}\n              </Card.Text>\n            </Card.Body>\n          </Card></Col>))}\n        </Row>\n        <Row>\n          <Col>\n            <h2>Creature Accessory Lootbox</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <p>Name: {creatureAccessoryLootBox.name}</p>\n          </Col>\n          <Col>\n            <p>Symbol: {creatureAccessoryLootBox.symbol}</p>\n          </Col>\n          <Col>\n            <p>Owner: {creatureAccessoryLootBox.owner}</p>\n          </Col>\n        </Row>\n        <Row>\n          {creatureAccessoryLootBox.items && creatureAccessoryLootBox.items.map((e, index) => (<Col key={'lootBoxAccessory' + index}><Card>\n            <Card.Body>\n              <Card.Title>Id: {e.id}</Card.Title>\n              <Card.Text>\n                Balance: {e.balance} - Creator: {e.creator} - Total Supply: {e.totalSupply}\n              </Card.Text>\n              <Button variant=\"primary\" onClick={() => unpack1155LootBox(e.id)}>Unpack 3</Button>\n            </Card.Body>\n          </Card></Col>))}\n        </Row>\n        <Row>\n          <Col>\n            <h2>Creature Accessory Factory</h2>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <p>Name: {creatureAccessoryFactory.name}</p>\n          </Col>\n          <Col>\n            <p>Symbol: {creatureAccessoryFactory.symbol}</p>\n          </Col>\n          <Col>\n            <p>Owner: {creatureAccessoryFactory.owner}</p>\n          </Col>\n        </Row>\n        <Row><Button onClick={() => mint1155To(0, currentAddress)}>Mint 3 common item</Button></Row>\n        <Row><Button onClick={() => mint1155To(1, currentAddress)}>Mint 3 rare item</Button></Row>\n        <Row><Button onClick={() => mint1155To(2, currentAddress)}>Mint 3 epic item</Button></Row>\n        <Row><Button onClick={() => mint1155To(3, currentAddress)}>Mint 3 legendary item</Button></Row>\n        <Row><Button onClick={() => mint1155To(4, currentAddress)}>Mint 3 divine item</Button></Row>\n        <Row><Button onClick={() => mint1155To(5, currentAddress)}>Mint 3 hidden item</Button></Row>\n        <Row><Button onClick={() => mint1155To(6, currentAddress)}>Mint 3 basic loot box</Button></Row>\n        <Row><Button onClick={() => mint1155To(7, currentAddress)}>Mint 3 premium loot box</Button></Row>\n        <Row><Button onClick={() => mint1155To(8, currentAddress)}>Mint 3 gold loot box</Button></Row>\n        <Row>\n          <Col>\n            <h1>Wyvern Exchange</h1>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}